$icon-font-path: "/bower_components/bootstrap-sass-official/vendor/assets/fonts/bootstrap/";

@import 'bootstrap-sass-official/vendor/assets/stylesheets/bootstrap';

// bower:scss
@import "../bower_components/bootstrap-sass-official/vendor/assets/stylesheets/bootstrap.scss";
// endbower

.browsehappy {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* Space out content a bit */
body {
    padding-top: 20px;
    padding-bottom: 20px;
}

/* Everything but the jumbotron gets side spacing for mobile first views */
.header,
.marketing,
.footer {
    padding-left: 15px;
    padding-right: 15px;
}

/* Custom page header */
.header {
    border-bottom: 1px solid #e5e5e5;
}

/* Make the masthead heading the same height as the navigation */
.header h3 {
    margin-top: 0;
    margin-bottom: 0;
    line-height: 40px;
    padding-bottom: 19px;
}

/* Custom page footer */
.footer {
    padding-top: 19px;
    color: #777;
    border-top: 1px solid #e5e5e5;
}

.container-narrow > hr {
    margin: 30px 0;
}

/* Main marketing message and sign up button */
.jumbotron {
    text-align: center;
    border-bottom: 1px solid #e5e5e5;
}

.jumbotron .btn {
    font-size: 21px;
    padding: 14px 24px;
}

/* Supporting marketing content */
.marketing {
    margin: 40px 0;
}

.marketing p + h4 {
    margin-top: 28px;
}

/* Responsive: Portrait tablets and up */
@media screen and (min-width: 768px) {
    .container {
        max-width: 730px;
    }

    /* Remove the padding we set earlier */
    .header,
    .marketing,
    .footer {
        padding-left: 0;
        padding-right: 0;
    }
    /* Space out the masthead */
    .header {
        margin-bottom: 30px;
    }
    /* Remove the bottom border on the jumbotron for visual effect */
    .jumbotron {
        border-bottom: 0;
    }
}

@function power ($x, $n) {
  $ret: 1;

  @if $n >= 0 {
    @for $i from 1 through $n {
      $ret: $ret * $x;
    }
  } @else {
    @for $i from $n to 0 {
      $ret: $ret / $x;
    }
  }

  @return $ret;
}

@mixin border-radius($radius: 3px) {
  border-radius: #{$radius};
  -moz-border-radius: #{$radius};
  -webkit-border-radius: #{$radius};
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  transition: $args;
}

$width: 400px;
$tile-count: 4;
$tile-padding: 15px;
$transition-time: 170ms;

$tile-size: ($width - $tile-padding * ($tile-count + 1)) / $tile-count;

$tile-radius: 3px;

$colors:  #EEE4DA, // 2
          #EAE0C8, // 4
          #F59563, // 8
          #3399ff, // 16
          #ffa333, // 32
          #cef030, // 64
          #E8D8CE, // 128
          #990303, // 256
          #6BA5DE, // 512
          #DCAD60, // 1024
          #B60022; // 2048

#game {
  position: relative;
  width: $width;
  height: $width;
  @include border-radius($tile-radius*2);

  background: #BBADA0;

  .grid-container {
    position: absolute;
    z-index: 1;
    margin: 0 auto;
    top: $tile-padding;
    left: $tile-padding;
    width: $width - $tile-padding;
    height: $width - $tile-padding;

    .grid-cell {
      // display: inline-block;
      float: left;
      width: $tile-size;
      height: $tile-size;
      margin-bottom: $tile-padding;
      margin-right: $tile-padding;

      @include border-radius($tile-radius);
      background: rgba(238, 228, 218, 0.35);
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;
    top: $tile-padding;
    left: $tile-padding;
    width: $width - $tile-padding;
    height: $width - $tile-padding;

    .tile {
      width: $tile-size;
      height: $tile-size;
      position: absolute;

      @include border-radius($tile-radius);
      @include transition($transition-time ease-in-out);
      -webkit-transition-property: transform;
      -moz-transition-property: transform;
      transition-property: transform;
      z-index: 2;

      @for $x from 1 through $tile-count {
        @for $y from 1 through $tile-count {
          $zeroOffsetX: $x - 1;
          $zeroOffsetY: $y - 1;
          $newX: ($tile-size + $tile-padding) * ($zeroOffsetX);
          $newY: ($tile-size + $tile-padding) * ($zeroOffsetY);

          &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
            -webkit-transform: translate($newX, $newY);
            transform: translate($newX, $newY);
          }
        }
      }

      .tile-inner {
        line-height: $tile-size;
        text-align: center;
        font-weight: bold;
        font-size: 2.5em;
        z-index: 10;
        @include border-radius($tile-radius);
      }

      @for $i from 1 through length($colors) {
        &.tile-#{power(2, $i)} .tile-inner {
          background: nth($colors, $i);
        }
      }
    }
  }
}


.game-container {
  position: relative;
  width: $width;
  height: $width;
  margin: 40px auto;
}

.game-overlay {
  width: $width;
  height: $width;
  background-color: rgba(255,255,255,0.47);
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  text-align: center;
  padding-top: 35%;
  overflow: hidden;
  box-sizing: border-box;

  .lower {
    display: block;
    margin-top: 29px;
    font-size: 16px;
  }
}
